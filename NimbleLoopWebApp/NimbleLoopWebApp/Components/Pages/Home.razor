@page "/"
@using Microsoft.EntityFrameworkCore
@using NimbleLoopWebApp.Client.Components
@using NimbleLoopWebApp.Client.ViewModels
@using NimbleLoopWebApp.Data
@using NimbleLoopWebApp.ViewModels
@using NimbleLoop.Domain.Queries
@using Constants = NimbleLoopWebApp.Constants
@attribute [StreamRendering]
@inject NimbleLoopDbContext DbContext
@inject ICacheService CacheService

<PageTitle>Home - @Constants.APP_NAME</PageTitle>

<!--Hero Section:start-->
<div class="container">
  <div class="row align-items-center my-5">
    <div class="col-md-6">
      <h1>We provide .NET Development Services for your Business</h1>
      <p>Our team of experts specializes in creating robust and scalable .NET applications tailored to your business needs.</p>
    </div>
    <div class="col-md-6 text-center">
      <img src="@Assets["images/hero-image.jpg"]" class="img-fluid" alt="Hero Image" />
    </div>
  </div>
</div>
<!--Hero Section:end-->
<!--About Section:start-->
<div class="container">
  <div class="row align-items-center my-5 text-center">
    <div class="col-md-12">
      <h2>Agile, Innovate and Committed</h2>
      <p>NimbleLoop is an agile software development agency delivering value-driven solutions through iterative milestones. We provide working MVPs at every step, ensuring continuous client collaboration, early feedback, and maximum flexibility. Backed by a passionate team of product experts, developers, and QAs, we seamlessly blend technical expertise with strategic insight—enabling businesses to achieve scalable, user-centric products that thrive in competitive markets.</p>
    </div>
  </div>
</div>
<!--About Section:end-->
<!--Services Section:start-->
<div class="my-5 container">
  <h2 class="mb-4 text-center">What are you looking for?</h2>
  <div class="row">
    @foreach (var service in services)
    {
      <div class="col-md-4 mb-4">
        <div class="card h-100 text-center">
          <div class="card-body">
            <h5 class="card-title">@service.Title</h5>
            <p class="card-text">@service.Description</p>
          </div>
        </div>
      </div>
    }
  </div>
</div>
<!--Services Section:end-->
<!--Standout Section:start-->
<div class="my-5 container">
  <h2 class="mb-4 text-center">Why Choose Us?</h2>
  <div class="table-responsive">
    <table class="table-bordered table">
      <thead>
        <tr>
          <th>Criteria</th>
          <th>NimbleLoop</th>
          <th>Others</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>Agile Development</td>
          <td>Iterative milestones with continuous client collaboration</td>
          <td>Traditional approach with less flexibility</td>
        </tr>
        <tr>
          <td>Expert Team</td>
          <td>Highly skilled developers, product experts, and QAs in latest .Net stack</td>
          <td>Generalist teams with varying expertise</td>
        </tr>
        <tr>
          <td>Client Focus</td>
          <td>Dedicated to understanding and meeting client needs</td>
          <td>Standardized solutions with less customization</td>
        </tr>
        <tr>
          <td>Innovation</td>
          <td>Incorporating the latest technologies like AI and cloud</td>
          <td>Slow to adopt new technologies</td>
        </tr>
        <tr>
          <td>Scalability</td>
          <td>Solutions designed to scale with your business</td>
          <td>Limited scalability options</td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
<!--Standout Section:end-->
<!--Stack Section:start-->
<div class="my-5 container">
  <h2 class="mb-4 text-center">Our Technical Stack</h2>
  <div class="d-flex flex-column align-items-center">
    <!-- Front-end -->
    <div class="card mb-3 w-75">
      <div class="card-header bg-primary text-white">
        Front-end
      </div>
      <div class="card-body">
        <p class="card-text">Blazor, React</p>
      </div>
    </div>
    <!-- Back-end -->
    <div class="card mb-3 w-75">
      <div class="card-header bg-secondary text-white">
        Back-end
      </div>
      <div class="card-body">
        <p class="card-text">.NET</p>
      </div>
    </div>
    <!-- Database -->
    <div class="card mb-3 w-75">
      <div class="card-header bg-success text-white">
        Database
      </div>
      <div class="card-body">
        <p class="card-text">MS SQL Server, Oracle DB, PostgreSQL, MongoDB</p>
      </div>
    </div>
    <!-- Cloud -->
    <div class="card mb-3 w-75">
      <div class="card-header bg-info text-white">
        Cloud
      </div>
      <div class="card-body">
        <p class="card-text">Azure</p>
      </div>
    </div>
  </div>
</div>
<!--Stack Section:end-->
<!--Articles Section:start-->
<div class="my-5 container">
  <h2 class="mb-4 text-center">Latest Articles</h2>
  <div class="row">
    @foreach (var article in articles)
    {
      <ArticleTile ImageUrl="@article.ImageUrl" Key="@article.Key" Summary="@article.Summary" Title="@article.Title" ImageAlt="@article.ImageAlt" />
    }
  </div>
  <div class="text-center">
    <a href="/articles" class="btn btn-secondary">View All</a>
  </div>
</div>
<!--Articles Section:end-->
<!--Contact Section:start-->
@* <div class="my-5 container">
  <h2 class="mb-4 text-center">Want to Work with us?</h2>
  <HomeContactUs Services="services" />
</div> *@
<!--Contact Section:end-->
@code {
  private List<HomeServiceViewModel> services = new()
    {
        new HomeServiceViewModel("Application Development in .NET", "We build new applications using the latest .NET technologies."),
        new HomeServiceViewModel("Application Re-engineering", "Modernize your legacy applications to improve user experience, performance and security."),
        new HomeServiceViewModel("AI integration","Incorporate AI features into your applications for enhanced functionality."),
        new HomeServiceViewModel("Strategic Roadmapping", "We analyze your product and provide the complete roadmap to create it in a best way."),
        new HomeServiceViewModel("Azure Cloud", "Seamlessly migrate your applications to the Azure cloud platform."),
        new HomeServiceViewModel("Dedicated Teams", "Get the resources you want, to develop and scale rapidly")
    };
  private List<HomeArticleViewModel> articles = [];

  protected override async Task OnInitializedAsync()
  {
    var fetchedArticles = await CacheService.GetOrCreateAsync(Constants.TOP_ARTICLES_CACHE, () => DbContext.Articles.GetArticles(4).ToListAsync());
    articles = fetchedArticles.Select(a => new HomeArticleViewModel(a.Key, a.GetArticleTitle(), a.MetaDescription ?? string.Empty, a.ImageUrl, a.GetArticleImageAlt()))
       .ToList();
  }
}